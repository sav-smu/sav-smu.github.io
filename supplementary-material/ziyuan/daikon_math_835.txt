
Executing target program: java -cp ../../daikon.jar:../../junit-4.12.jar:../../hamcrest-core-1.3.jar:./target/classes:./target/test-classes -ea -Xmx1000m -javaagent:../../daikon.jar=--daikon --dtrace-file=DaikonTestIssue835.dtrace.gz org.apache.commons.math3.fraction.DaikonTestIssue835
entered daikon.chicory.Runtime.setDtrace(./DaikonTestIssue835.dtrace.gz, false)...

Executing daikon: java -Xmx1000m -cp ../../daikon.jar:../../junit-4.12.jar:../../hamcrest-core-1.3.jar:./target/classes:./target/test-classes -ea daikon.Daikon  ./DaikonTestIssue835.dtrace.gz
Daikon version 5.2.20, released January 5, 2016; http://plse.cs.washington.edu/daikon.
Reading declaration files [2:01:00 PM]:                                                                                                                                                                                                                                Processing trace data; reading 1 dtrace file:
[2:01:01 PM]: Reading ./DaikonTestIssue835.dtrace.gz (line 33123, 2.13%) ...   [2:01:02 PM]: Reading ./DaikonTestIssue835.dtrace.gz (line 93245, 5.98%) ...   [2:01:03 PM]: Reading ./DaikonTestIssue835.dtrace.gz (line 171642, 11.02%) ... [2:01:04 PM]: Reading ./DaikonTestIssue835.dtrace.gz (line 239429, 15.37%) ... [2:01:05 PM]: Reading ./DaikonTestIssue835.dtrace.gz (line 284732, 18.27%) ... [2:01:06 PM]: Reading ./DaikonTestIssue835.dtrace.gz (line 1207124, 77.47%) ...[2:01:07 PM]: Reading ./DaikonTestIssue835.dtrace.gz (line 1525209, 97.89%) ...
No return from procedure observed 51 times.  Unmatched entries are ignored!
Unterminated calls:
  org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.Fraction(int, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.Fraction(int, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.Fraction(int, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction) : 2 invocations
  org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 2 invocations
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.getReducedFraction(int, int) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.negate() : 1 invocation
  org.apache.commons.math3.fraction.Fraction.reciprocal() : 1 invocation
  org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction) : 1 invocation
  org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(int, int) : 2 invocations
  org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(int, int) : 1 invocation
  org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int, int) : 2 invocations
  org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int, int) : 2 invocations
  org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int, int) : 1 invocation
  org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(int, int) : 1 invocation
  org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(int, int) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!
[2:01:07 PM]: Finished reading ./DaikonTestIssue835.dtrace.gz                  
                                                                                                                                                              ===========================================================================
org.apache.commons.math3.TestUtils.serializeAndRecover(java.lang.Object):::ENTER
o.getClass().getName() == org.apache.commons.math3.fraction.Fraction.class
===========================================================================
org.apache.commons.math3.TestUtils.serializeAndRecover(java.lang.Object):::EXIT121
===========================================================================
org.apache.commons.math3.TestUtils.serializeAndRecover(java.lang.Object):::EXIT
return.getClass().getName() == org.apache.commons.math3.fraction.Fraction.class
return.getClass().getName() == orig(o.getClass().getName())
===========================================================================
org.apache.commons.math3.exception.ConvergenceException:::CLASS
===========================================================================
org.apache.commons.math3.exception.ConvergenceException:::OBJECT
===========================================================================
org.apache.commons.math3.exception.ConvergenceException.ConvergenceException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
pattern has only one value
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
args.getClass().getName() == java.lang.Object[].class
size(args[]) == 3
===========================================================================
org.apache.commons.math3.exception.ConvergenceException.ConvergenceException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
args[] == orig(args[])
===========================================================================
org.apache.commons.math3.exception.MathArithmeticException:::CLASS
===========================================================================
org.apache.commons.math3.exception.MathArithmeticException:::OBJECT
org.apache.commons.math3.exception.MathArithmeticException.serialVersionUID == org.apache.commons.math3.exception.util.ExceptionContext.serialVersionUID
size(this.context.msgPatterns[]) == size(this.context.msgArguments[])
this.context != null
this.context.throwable != null
this.context.msgPatterns != null
this.context.msgPatterns[] elements != null
this.context.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
this.context.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.context.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.context.msgArguments != null
this.context.msgArguments[] elements != null
this.context.msgArguments[].getClass().getName() == [java.lang.Object[]]
this.context.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.context.context != null
this.context.context.getClass().getName() == java.util.HashMap.class
size(this.context.msgPatterns[]) == 1
this.context.msgPatterns.getClass().getName() == this.context.msgArguments.getClass().getName()
this.context.msgPatterns.getClass().getName() != this.context.context.getClass().getName()
===========================================================================
org.apache.commons.math3.exception.MathArithmeticException.MathArithmeticException():::EXIT
this.context.msgPatterns[] contains no nulls and has only one value, of length 1
this.context.msgPatterns[] elements has only one value
===========================================================================
org.apache.commons.math3.exception.MathArithmeticException.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
pattern != null
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
args != null
args.getClass().getName() == java.lang.Object[].class
args[] elements != null
size(args[]) one of { 1, 2 }
pattern.getClass().getName() != args.getClass().getName()
===========================================================================
org.apache.commons.math3.exception.MathArithmeticException.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
args[] == orig(args[])
args[] elements != null
org.apache.commons.math3.exception.MathArithmeticException.serialVersionUID < size(args[])-1
orig(pattern) in this.context.msgPatterns[]
this.context.msgPatterns[] elements == orig(pattern)
orig(pattern.getClass().getName()) in this.context.msgPatterns[].getClass().getName()
this.context.msgPatterns.getClass().getName() != orig(pattern.getClass().getName())
this.context.msgPatterns.getClass().getName() != orig(args.getClass().getName())
orig(args.getClass().getName()) in this.context.msgArguments[].getClass().getName()
this.context.context.getClass().getName() != orig(pattern.getClass().getName())
this.context.context.getClass().getName() != orig(args.getClass().getName())
size(this.context.msgPatterns[]) >= size(args[])-1
size(this.context.msgPatterns[]) <= orig(size(args[]))
size(this.context.msgPatterns[])-1 <= size(args[])-1
===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException:::CLASS
===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException:::OBJECT
org.apache.commons.math3.exception.MathIllegalArgumentException.serialVersionUID == org.apache.commons.math3.exception.util.ExceptionContext.serialVersionUID
size(this.context.msgPatterns[]) == size(this.context.msgArguments[])
this.context.msgPatterns[] contains no nulls and has only one value, of length 1
this.context.msgPatterns[] elements has only one value
this.context.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
this.context.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.context.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.context.msgArguments[].getClass().getName() == [java.lang.Object[]]
this.context.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.context.context.getClass().getName() == java.util.HashMap.class
size(this.context.msgPatterns[]) == 1
this.context.msgPatterns.getClass().getName() == this.context.msgArguments.getClass().getName()
===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
pattern has only one value
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
args.getClass().getName() == java.lang.Object[].class
args[] == []
===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
args[] == orig(args[])
size(this.context.msgPatterns[])-1 == orig(size(args[]))
size(this.context.msgArguments[])-1 == orig(size(args[]))
args[] == []
orig(pattern) in this.context.msgPatterns[]
this.context.msgPatterns[] elements == orig(pattern)
orig(pattern.getClass().getName()) in this.context.msgPatterns[].getClass().getName()
orig(args.getClass().getName()) in this.context.msgArguments[].getClass().getName()
===========================================================================
org.apache.commons.math3.exception.MathIllegalStateException:::CLASS
===========================================================================
org.apache.commons.math3.exception.MathIllegalStateException:::OBJECT
org.apache.commons.math3.exception.MathIllegalStateException.serialVersionUID == org.apache.commons.math3.exception.util.ExceptionContext.serialVersionUID
size(this.context.msgPatterns[]) == size(this.context.msgArguments[])
this.context.msgPatterns[] contains no nulls and has only one value, of length 1
this.context.msgPatterns[] elements has only one value
this.context.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
this.context.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.context.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.context.msgArguments[].getClass().getName() == [java.lang.Object[]]
this.context.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.context.context.getClass().getName() == java.util.HashMap.class
size(this.context.msgPatterns[]) == 1
this.context.msgPatterns.getClass().getName() == this.context.msgArguments.getClass().getName()
this.context.msgPatterns.getClass().getName() != this.context.context.getClass().getName()
===========================================================================
org.apache.commons.math3.exception.MathIllegalStateException.MathIllegalStateException():::EXIT
===========================================================================
org.apache.commons.math3.exception.MathIllegalStateException.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
pattern has only one value
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
args.getClass().getName() == java.lang.Object[].class
args[] == []
===========================================================================
org.apache.commons.math3.exception.MathIllegalStateException.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
args[] == orig(args[])
size(this.context.msgPatterns[])-1 == orig(size(args[]))
size(this.context.msgArguments[])-1 == orig(size(args[]))
args[] == []
orig(pattern) in this.context.msgPatterns[]
this.context.msgPatterns[] elements == orig(pattern)
orig(pattern.getClass().getName()) in this.context.msgPatterns[].getClass().getName()
orig(args.getClass().getName()) in this.context.msgArguments[].getClass().getName()
===========================================================================
org.apache.commons.math3.exception.MathIllegalStateException.getContext():::ENTER
===========================================================================
org.apache.commons.math3.exception.MathIllegalStateException.getContext():::EXIT
this.context == return
this.context.throwable == return.throwable
this.context.msgPatterns == return.msgPatterns
this.context.msgPatterns[] == return.msgPatterns[]
this.context.msgArguments == return.msgArguments
this.context.msgArguments[] == return.msgArguments[]
this.context.context == return.context
return == orig(this.context)
return.throwable == orig(this.context.throwable)
return.msgPatterns == orig(this.context.msgPatterns)
return.msgPatterns[] == orig(this.context.msgPatterns[])
return.msgArguments == orig(this.context.msgArguments)
return.msgArguments[] == orig(this.context.msgArguments[])
return.context == orig(this.context.context)
size(this.context.msgArguments[]) == size(return.msgPatterns[])
size(return.msgPatterns[]) == size(return.msgArguments[])
size(return.msgPatterns[]) == orig(size(this.context.msgArguments[]))
return.msgPatterns[] contains no nulls and has only one value, of length 1
return.msgPatterns[] elements has only one value
return.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
return.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
return.msgPatterns.getClass().getName() == java.util.ArrayList.class
return.msgArguments[].getClass().getName() == [java.lang.Object[]]
return.msgArguments[].getClass().getName() elements == java.lang.Object[].class
return.context.getClass().getName() == java.util.HashMap.class
size(return.msgPatterns[]) == 1
this.context.msgPatterns.getClass().getName() == return.msgPatterns.getClass().getName()
this.context.msgArguments.getClass().getName() == return.msgPatterns.getClass().getName()
this.context.context.getClass().getName() == return.context.getClass().getName()
return.msgPatterns.getClass().getName() == return.msgArguments.getClass().getName()
return.msgPatterns.getClass().getName() == orig(this.context.msgPatterns.getClass().getName())
return.msgPatterns.getClass().getName() == orig(this.context.msgArguments.getClass().getName())
return.context.getClass().getName() == orig(this.context.context.getClass().getName())
===========================================================================
org.apache.commons.math3.exception.NullArgumentException:::CLASS
===========================================================================
org.apache.commons.math3.exception.NullArgumentException:::OBJECT
===========================================================================
org.apache.commons.math3.exception.NullArgumentException.NullArgumentException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
pattern has only one value
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
arguments.getClass().getName() == java.lang.Object[].class
arguments[] == []
===========================================================================
org.apache.commons.math3.exception.NullArgumentException.NullArgumentException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
arguments[] == orig(arguments[])
arguments[] == []
===========================================================================
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]):::ENTER
array != null
array.getClass().getName() == java.lang.Object[].class
array[] elements != null
===========================================================================
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]):::EXIT
array[] == return[]
array[] == orig(array[])
array[] elements != null
return != null
return.getClass().getName() == java.lang.Object[].class
return.getClass().getName() == orig(array.getClass().getName())
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext:::CLASS
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext:::OBJECT
size(this.msgPatterns[]) == size(this.msgArguments[])
this.throwable != null
this.msgPatterns != null
this.msgPatterns[] elements != null
this.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.msgArguments != null
this.msgArguments[] elements != null
this.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.context != null
this.context.getClass().getName() == java.util.HashMap.class
size(this.msgPatterns[]) one of { 0, 1, 2 }
org.apache.commons.math3.exception.util.ExceptionContext.serialVersionUID < size(this.msgPatterns[])-1
this.msgPatterns.getClass().getName() == this.msgArguments.getClass().getName()
this.msgPatterns.getClass().getName() != this.context.getClass().getName()
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.ExceptionContext(java.lang.Throwable):::ENTER
throwable != null
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.ExceptionContext(java.lang.Throwable):::EXIT
this.throwable == orig(throwable)
this.msgPatterns[] == this.msgArguments[]
this.msgPatterns[] == []
this.msgPatterns[].getClass().getName() == []
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
this.msgPatterns[] elements has only one value
this.msgPatterns[].getClass().getName() one of { [], [org.apache.commons.math3.exception.util.LocalizedFormats] }
this.msgArguments[].getClass().getName() one of { [], [java.lang.Object[]] }
pattern != null
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
arguments != null
arguments.getClass().getName() == java.lang.Object[].class
arguments[] elements != null
size(this.msgPatterns[]) one of { 0, 1 }
org.apache.commons.math3.exception.util.ExceptionContext.serialVersionUID < size(arguments[])-1
this.msgPatterns.getClass().getName() != pattern.getClass().getName()
this.msgPatterns.getClass().getName() != arguments.getClass().getName()
this.context.getClass().getName() != pattern.getClass().getName()
this.context.getClass().getName() != arguments.getClass().getName()
pattern.getClass().getName() != arguments.getClass().getName()
size(this.msgPatterns[]) <= size(arguments[])
size(this.msgPatterns[])-1 <= size(arguments[])-1
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
this.throwable == orig(this.throwable)
this.msgPatterns == orig(this.msgPatterns)
this.msgArguments == orig(this.msgArguments)
this.context == orig(this.context)
arguments[] == orig(arguments[])
size(this.msgPatterns[])-1 == orig(size(this.msgPatterns[]))
size(this.msgPatterns[])-1 == orig(size(this.msgArguments[]))
this.msgPatterns[].getClass().getName() one of { [org.apache.commons.math3.exception.util.LocalizedFormats], [org.apache.commons.math3.exception.util.LocalizedFormats, org.apache.commons.math3.exception.util.LocalizedFormats] }
this.msgArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.Object[], java.lang.Object[]] }
arguments[] elements != null
size(this.msgPatterns[]) one of { 1, 2 }
org.apache.commons.math3.exception.util.ExceptionContext.serialVersionUID < size(arguments[])-1
orig(pattern) in this.msgPatterns[]
orig(pattern.getClass().getName()) in this.msgPatterns[].getClass().getName()
this.msgPatterns.getClass().getName() == orig(this.msgPatterns.getClass().getName())
this.msgPatterns.getClass().getName() == orig(this.msgArguments.getClass().getName())
this.msgPatterns.getClass().getName() != orig(pattern.getClass().getName())
this.msgPatterns.getClass().getName() != orig(arguments.getClass().getName())
orig(arguments.getClass().getName()) in this.msgArguments[].getClass().getName()
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context.getClass().getName() != orig(pattern.getClass().getName())
this.context.getClass().getName() != orig(arguments.getClass().getName())
size(arguments[])-1 % size(this.msgPatterns[]) == 0
size(this.msgPatterns[]) >= size(arguments[])-1
size(this.msgPatterns[])-1 <= orig(size(arguments[]))
size(arguments[])-1 >= orig(size(this.msgPatterns[]))-1
===========================================================================
org.apache.commons.math3.exception.util.LocalizedFormats:::OBJECT
this.sourceFormat != null
===========================================================================
org.apache.commons.math3.exception.util.LocalizedFormats.LocalizedFormats(java.lang.String, int, java.lang.String):::ENTER
$hidden$1 != null
sourceFormat != null
$hidden$1.toString != sourceFormat.toString
===========================================================================
org.apache.commons.math3.exception.util.LocalizedFormats.LocalizedFormats(java.lang.String, int, java.lang.String):::EXIT
this.sourceFormat == orig(sourceFormat)
this.sourceFormat.toString == sourceFormat.toString
$hidden$1.toString != sourceFormat.toString
$hidden$1.toString == orig($hidden$1.toString)
sourceFormat.toString == orig(sourceFormat.toString)
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835:::OBJECT
this has only one value
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.DaikonTestIssue835():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.assertFraction(int, int, org.apache.commons.math3.fraction.Fraction):::ENTER
expectedNumerator == actual.numerator
expectedDenominator == actual.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ZERO.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator
expectedDenominator >= 1
actual != null
org.apache.commons.math3.fraction.Fraction.TWO has only one value
org.apache.commons.math3.fraction.Fraction.TWO != null
org.apache.commons.math3.fraction.Fraction.ONE has only one value
org.apache.commons.math3.fraction.Fraction.ONE != null
org.apache.commons.math3.fraction.Fraction.ZERO has only one value
org.apache.commons.math3.fraction.Fraction.ZERO != null
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH has only one value
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH != null
org.apache.commons.math3.fraction.Fraction.ONE_HALF has only one value
org.apache.commons.math3.fraction.Fraction.ONE_HALF != null
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER has only one value
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER != null
org.apache.commons.math3.fraction.Fraction.ONE_THIRD has only one value
org.apache.commons.math3.fraction.Fraction.ONE_THIRD != null
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS has only one value
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS != null
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS != null
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS != null
org.apache.commons.math3.fraction.Fraction.MINUS_ONE has only one value
org.apache.commons.math3.fraction.Fraction.MINUS_ONE != null
org.apache.commons.math3.fraction.Fraction.TWO.denominator == 1
org.apache.commons.math3.fraction.Fraction.TWO.numerator == 2
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == false
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == 0
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == 5
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == 4
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == 3
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == -1
expectedNumerator < org.apache.commons.math3.fraction.Fraction.serialVersionUID
expectedDenominator < org.apache.commons.math3.fraction.Fraction.serialVersionUID
expectedDenominator >= org.apache.commons.math3.fraction.Fraction.TWO.denominator
expectedDenominator > org.apache.commons.math3.fraction.Fraction.ZERO.numerator
expectedDenominator > org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.assertFraction(int, int, org.apache.commons.math3.fraction.Fraction):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ZERO.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
actual.denominator == orig(expectedDenominator)
actual.denominator == orig(actual.denominator)
actual.numerator == orig(expectedNumerator)
actual.numerator == orig(actual.numerator)
org.apache.commons.math3.fraction.Fraction.TWO has only one value
org.apache.commons.math3.fraction.Fraction.TWO != null
org.apache.commons.math3.fraction.Fraction.ONE has only one value
org.apache.commons.math3.fraction.Fraction.ONE != null
org.apache.commons.math3.fraction.Fraction.ZERO has only one value
org.apache.commons.math3.fraction.Fraction.ZERO != null
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH has only one value
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH != null
org.apache.commons.math3.fraction.Fraction.ONE_HALF has only one value
org.apache.commons.math3.fraction.Fraction.ONE_HALF != null
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER has only one value
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER != null
org.apache.commons.math3.fraction.Fraction.ONE_THIRD has only one value
org.apache.commons.math3.fraction.Fraction.ONE_THIRD != null
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS has only one value
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS != null
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS != null
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS != null
org.apache.commons.math3.fraction.Fraction.MINUS_ONE has only one value
org.apache.commons.math3.fraction.Fraction.MINUS_ONE != null
org.apache.commons.math3.fraction.Fraction.TWO.denominator == 1
org.apache.commons.math3.fraction.Fraction.TWO.numerator == 2
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == false
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == 0
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == 5
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == 4
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == 3
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == -1
actual.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > actual.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > actual.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= actual.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < actual.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < actual.denominator
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.checkIntegerOverflow(double):::ENTER
a one of { 0.7500000000145519, 1.0E10 }
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.checkIntegerOverflow(double):::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.main(java.lang.String[]):::ENTER
args has only one value
args.getClass().getName() == java.lang.String[].class
args[] == []
args[].toString == []
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.main(java.lang.String[]):::EXIT
args[] == orig(args[])
args[] == []
args[].toString == []
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testAbs():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testAbs():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testAdd():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testAdd():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testCompareTo():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testCompareTo():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testConstructor():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testConstructor():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testConstructorDouble():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testConstructorDouble():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDigitLimitConstructor():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDigitLimitConstructor():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDivide():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDivide():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDoubleConstructor():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDoubleConstructor():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDoubleValue():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testDoubleValue():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testEpsilonLimitConstructor():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testEpsilonLimitConstructor():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testEqualsAndHashCode():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testEqualsAndHashCode():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testFloatValue():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testFloatValue():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testGetReducedFraction():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testGetReducedFraction():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testIntValue():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testIntValue():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testIntegerOverflow():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testIntegerOverflow():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testLongValue():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testLongValue():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testMultiply():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testMultiply():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testNegate():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testNegate():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testPercentage():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testPercentage():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testReciprocal():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testReciprocal():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testSerial():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testSerial():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testSubtract():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testSubtract():::EXIT
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testToString():::ENTER
===========================================================================
org.apache.commons.math3.fraction.DaikonTestIssue835.testToString():::EXIT
===========================================================================
org.apache.commons.math3.fraction.Fraction:::CLASS
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ZERO.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator
org.apache.commons.math3.fraction.Fraction.TWO has only one value
org.apache.commons.math3.fraction.Fraction.TWO != null
org.apache.commons.math3.fraction.Fraction.ONE has only one value
org.apache.commons.math3.fraction.Fraction.ONE != null
org.apache.commons.math3.fraction.Fraction.ZERO has only one value
org.apache.commons.math3.fraction.Fraction.ZERO != null
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH has only one value
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH != null
org.apache.commons.math3.fraction.Fraction.ONE_HALF has only one value
org.apache.commons.math3.fraction.Fraction.ONE_HALF != null
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER has only one value
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER != null
org.apache.commons.math3.fraction.Fraction.ONE_THIRD has only one value
org.apache.commons.math3.fraction.Fraction.ONE_THIRD != null
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS has only one value
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS != null
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS != null
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS != null
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS has only one value
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS != null
org.apache.commons.math3.fraction.Fraction.MINUS_ONE has only one value
org.apache.commons.math3.fraction.Fraction.MINUS_ONE != null
org.apache.commons.math3.fraction.Fraction.TWO.denominator == 1
org.apache.commons.math3.fraction.Fraction.TWO.numerator == 2
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == false
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == 0
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == 5
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == 4
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == 3
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == -1
===========================================================================
org.apache.commons.math3.fraction.Fraction:::OBJECT
this.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > this.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= this.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < this.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < this.denominator
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double):::ENTER
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double):::EXIT
this.denominator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int):::ENTER
maxIterations == 100
value != epsilon
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int):::EXIT
this.denominator != this.numerator
this.numerator != orig(maxIterations)
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int):::ENTER
maxIterations == 100
value != epsilon
maxDenominator != maxIterations
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int):::EXIT190
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
this.numerator one of { 0, 15 }
orig(value) one of { 1.0E-14, 15.0000000000001 }
orig(epsilon) == 1.0E-5
orig(maxDenominator) == 2147483647
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int):::EXIT238
this.denominator >= 2
org.apache.commons.math3.fraction.Fraction.TWO.denominator < this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator <= this.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int):::EXIT
(this.denominator == 1)  <==>  (org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator)
(this.denominator == 1)  ==>  (orig(epsilon) == 1.0E-5)
(this.denominator == 1)  ==>  (orig(maxDenominator) == 2147483647)
(this.denominator == 1)  ==>  (orig(value) one of { 1.0E-14, 15.0000000000001 })
(this.denominator == 1)  ==>  (this.numerator one of { 0, 15 })
(this.denominator >= 2)  <==>  (org.apache.commons.math3.fraction.Fraction.TWO.denominator < this.denominator)
(this.denominator >= 2)  <==>  (org.apache.commons.math3.fraction.Fraction.TWO.numerator <= this.denominator)
(this.denominator >= 2)  ==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator)
org.apache.commons.math3.fraction.Fraction.serialVersionUID > orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < orig(maxDenominator)
this.denominator != this.numerator
this.denominator < orig(maxDenominator)
this.numerator < orig(maxDenominator)
this.numerator != orig(maxIterations)
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, int):::ENTER
value one of { 0.4, 0.6152, 3.141592653589793 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(double, int):::EXIT
this.numerator >= 2
org.apache.commons.math3.fraction.Fraction.serialVersionUID > orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator < this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator < this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator < this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator <= this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator <= this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator < this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator < this.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator < orig(maxDenominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < orig(maxDenominator)
this.denominator != this.numerator
this.denominator < orig(maxDenominator)
this.numerator < orig(maxDenominator)
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(int):::ENTER
num == 17
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(int):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
this.numerator == orig(num)
this.numerator == 17
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(int, int):::ENTER
===========================================================================
org.apache.commons.math3.fraction.Fraction.Fraction(int, int):::EXIT
org.apache.commons.math3.fraction.Fraction.serialVersionUID > orig(num)
org.apache.commons.math3.fraction.Fraction.serialVersionUID > orig(den)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != orig(den)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != orig(num)
orig(den) % this.denominator == 0
===========================================================================
org.apache.commons.math3.fraction.Fraction.abs():::ENTER
this.denominator == 21
this.numerator one of { -10, 10 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.abs():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == return.denominator
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
this.denominator == 21
this.numerator one of { -10, 10 }
return.numerator == 10
===========================================================================
org.apache.commons.math3.fraction.Fraction.add(int):::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == i
this has only one value
this.numerator == 2147483646
===========================================================================
org.apache.commons.math3.fraction.Fraction.add(int):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(i)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.numerator == orig(this.numerator)
this.numerator == 2147483646
return has only one value
return.numerator == 2147483647
===========================================================================
org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction):::ENTER
fraction.numerator one of { -1, 1, 2 }
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator <= fraction.numerator
this.denominator != this.numerator
this.denominator >= fraction.numerator
fraction.denominator >= fraction.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
fraction.denominator == orig(fraction.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.numerator one of { -1, 1, 2 }
return.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator <= fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != return.numerator
this.denominator != this.numerator
this.denominator >= fraction.numerator
this.denominator != return.numerator
fraction.denominator >= fraction.numerator
fraction.denominator != return.numerator
fraction.numerator <= return.denominator
===========================================================================
org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean):::ENTER
fraction != null
fraction.denominator >= 1
fraction.numerator one of { -1, 1, 2 }
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator <= fraction.numerator
this.denominator != this.numerator
this.denominator >= fraction.numerator
fraction.denominator >= fraction.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean):::EXIT494
this.denominator one of { 1, 2, 3 }
fraction.denominator one of { 1, 2, 3 }
fraction.numerator one of { 1, 2 }
return.denominator one of { 1, 6 }
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator >= this.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator >= fraction.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator <= return.numerator
this.denominator % fraction.numerator == 0
return.denominator % this.denominator == 0
this.denominator <= return.denominator
this.numerator != fraction.numerator
this.numerator != return.denominator
this.numerator != return.numerator
fraction.denominator <= return.denominator
return.denominator % fraction.denominator == 0
fraction.numerator <= return.denominator
return.denominator != return.numerator
2147483644 * this.denominator + 2.14748365E9 * fraction.denominator + 3 * return.numerator - 1.0737418235E10 == 0
1073741823 * this.denominator + 1073741825 * fraction.numerator + return.numerator - 4.294967295E9 == 0
2 * this.denominator - 429496730 * return.denominator - return.numerator + 2.576980375E9 == 0
2147483646 * fraction.denominator - 2147483644 * fraction.numerator + return.numerator - 2.147483649E9 == 0
10 * fraction.denominator + 2147483644 * return.denominator + 5 * return.numerator - 1.2884901889E10 == 0
10 * fraction.numerator + 2147483646 * return.denominator + 5 * return.numerator - 1.2884901891E10 == 0
===========================================================================
org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean):::EXIT518
org.apache.commons.math3.fraction.Fraction.TWO.denominator < this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator <= this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != return.numerator
this.denominator > this.numerator
this.denominator >= fraction.denominator
this.denominator > fraction.numerator
this.numerator < fraction.denominator
this.numerator % fraction.numerator == 0
this.numerator <= fraction.numerator
fraction.denominator > fraction.numerator
return.numerator % fraction.numerator == 0
===========================================================================
org.apache.commons.math3.fraction.Fraction.addSub(org.apache.commons.math3.fraction.Fraction, boolean):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
fraction.denominator == orig(fraction.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.denominator >= 1
fraction.numerator one of { -1, 1, 2 }
return != null
return.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator <= fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return.denominator
this.denominator != this.numerator
this.denominator >= fraction.numerator
this.denominator != return.numerator
fraction.denominator >= fraction.numerator
fraction.denominator != return.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.compareTo(org.apache.commons.math3.fraction.Fraction):::ENTER
this.denominator >= 2
this.numerator one of { 1, 411557987, 1068966896 }
object.denominator >= 2
object.numerator one of { 1, 411557987, 1068966896 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.compareTo(org.apache.commons.math3.fraction.Fraction):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
object.denominator == orig(object.denominator)
object.numerator == orig(object.numerator)
this.denominator >= 2
this.numerator one of { 1, 411557987, 1068966896 }
object.denominator >= 2
object.numerator one of { 1, 411557987, 1068966896 }
return one of { -1, 0, 1 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.divide(int):::ENTER
this has only one value
this.denominator == 35
this.numerator == 6
i == 15
===========================================================================
org.apache.commons.math3.fraction.Fraction.divide(int):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
this.denominator == 35
this.numerator == 6
return has only one value
return.denominator == 175
===========================================================================
org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction):::ENTER
this.numerator <= 2
fraction.numerator one of { 1, 2 }
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.numerator
this.denominator > this.numerator
fraction.denominator >= fraction.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
fraction.denominator == orig(fraction.denominator)
fraction.numerator == orig(fraction.numerator)
this.numerator <= 2
fraction.numerator one of { 1, 2 }
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator >= return.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != return.numerator
this.denominator > this.numerator
this.denominator != return.numerator
fraction.denominator >= fraction.numerator
fraction.denominator != return.denominator
===========================================================================
org.apache.commons.math3.fraction.Fraction.doubleValue():::ENTER
this.numerator >= 1
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < this.numerator
this.denominator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.doubleValue():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
this.numerator >= 1
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < this.numerator
this.denominator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT334
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(this.numerator)
orig(this) == orig(other)
return == true
orig(other.getClass().getName()) == org.apache.commons.math3.fraction.Fraction.class
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT334;condition="return == true"
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT340
return == true
orig(other.getClass().getName()) == org.apache.commons.math3.fraction.Fraction.class
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT340;condition="return == true"
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT341
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == return
this.numerator one of { 0, 1 }
orig(other.getClass().getName()) == org.apache.commons.math3.fraction.Fraction.class
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT341;condition="not(return == true)"
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT343
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == return
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(this.numerator)
orig(this) has only one value
orig(other.getClass().getName()) == java.lang.Double.class
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT343;condition="not(return == true)"
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
(return == false)  ==>  (org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == return)
(return == false)  ==>  (org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator)
(return == false)  ==>  (this.denominator == 1)
(return == false)  ==>  (this.numerator one of { 0, 1 })
(return == true)  ==>  (orig(other.getClass().getName()) == org.apache.commons.math3.fraction.Fraction.class)
org.apache.commons.math3.fraction.Fraction.TWO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT;condition="return == true"
return == true
orig(other.getClass().getName()) == org.apache.commons.math3.fraction.Fraction.class
===========================================================================
org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object):::EXIT;condition="not(return == true)"
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == return
this.numerator one of { 0, 1 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.floatValue():::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.numerator
this.denominator one of { 2, 3 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.floatValue():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.denominator one of { 2, 3 }
return one of { 0.33333334, 0.5 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.getDenominator():::ENTER
===========================================================================
org.apache.commons.math3.fraction.Fraction.getDenominator():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == return
this.numerator == orig(this.numerator)
return == orig(this.denominator)
return >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return
===========================================================================
org.apache.commons.math3.fraction.Fraction.getNumerator():::ENTER
===========================================================================
org.apache.commons.math3.fraction.Fraction.getNumerator():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == return
return == orig(this.numerator)
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return
===========================================================================
org.apache.commons.math3.fraction.Fraction.getReducedFraction(int, int):::ENTER
org.apache.commons.math3.fraction.Fraction.serialVersionUID > numerator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.getReducedFraction(int, int):::EXIT620
org.apache.commons.math3.fraction.Fraction.ZERO == return
org.apache.commons.math3.fraction.Fraction.TWO.denominator == return.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == return.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(numerator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(denominator)
===========================================================================
org.apache.commons.math3.fraction.Fraction.getReducedFraction(int, int):::EXIT639
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != orig(numerator)
orig(numerator) % return.numerator == 0
===========================================================================
org.apache.commons.math3.fraction.Fraction.getReducedFraction(int, int):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
(denominator == -1)  <==>  (org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == denominator)
(denominator == -1)  <==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(numerator))
(denominator == -1)  <==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator == return.numerator)
(denominator == -1)  <==>  (orig(numerator) == 0)
(denominator == -1)  <==>  (return.numerator == 0)
(denominator == -1)  ==>  (org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(denominator))
(denominator == -1)  ==>  (org.apache.commons.math3.fraction.Fraction.TWO.denominator == return.denominator)
(denominator == -1)  ==>  (org.apache.commons.math3.fraction.Fraction.ZERO == return)
(denominator == -1)  ==>  (orig(denominator) == -1)
(denominator == -1)  ==>  (return has only one value)
(denominator == -1)  ==>  (return.denominator == 1)
(denominator >= 1)  <==>  (denominator == return.denominator)
(denominator >= 1)  <==>  (org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < denominator)
(denominator >= 1)  <==>  (org.apache.commons.math3.fraction.Fraction.TWO.denominator <= denominator)
(denominator >= 1)  <==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator != orig(numerator))
(denominator >= 1)  <==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator != return.numerator)
(denominator >= 1)  <==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator < denominator)
(denominator >= 1)  ==>  (orig(numerator) % return.numerator == 0)
return != null
return.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != orig(denominator)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != orig(denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != orig(numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != orig(denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator >= return.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != orig(numerator)
orig(denominator) % return.denominator == 0
return.numerator <= orig(numerator)
===========================================================================
org.apache.commons.math3.fraction.Fraction.hashCode():::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.hashCode():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(this.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
return == 23274
===========================================================================
org.apache.commons.math3.fraction.Fraction.intValue():::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.numerator == this.denominator
this.numerator one of { 1, 3 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.intValue():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.numerator == orig(this.numerator)
this.numerator one of { 1, 3 }
return one of { 0, 1 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.longValue():::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.numerator == this.denominator
this.numerator one of { 1, 3 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.longValue():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.numerator == orig(this.numerator)
this.numerator one of { 1, 3 }
return one of { 0, 1 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.multiply(int):::ENTER
this.denominator one of { 2, 35 }
this.numerator one of { 1, 6 }
i one of { 15, 100 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.multiply(int):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
this.denominator one of { 2, 35 }
this.numerator one of { 1, 6 }
return.denominator one of { 1, 7 }
return.numerator one of { 18, 50 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction):::ENTER
fraction != null
fraction.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != fraction.numerator
this.denominator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction):::EXIT538
org.apache.commons.math3.fraction.Fraction.ZERO == return
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(fraction.denominator)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == return.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(this.numerator)
fraction.numerator == 7
orig(this) has only one value
orig(fraction) has only one value
===========================================================================
org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction):::EXIT544
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != return.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
fraction.denominator == orig(fraction.denominator)
fraction.numerator == orig(fraction.numerator)
(this.numerator == 0)  <==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator == return.numerator)
(this.numerator == 0)  <==>  (org.apache.commons.math3.fraction.Fraction.ZERO.numerator == this.numerator)
(this.numerator == 0)  <==>  (return.numerator == 0)
(this.numerator == 0)  ==>  (fraction.denominator == 2)
(this.numerator == 0)  ==>  (fraction.numerator == 7)
(this.numerator == 0)  ==>  (org.apache.commons.math3.fraction.Fraction.TWO.denominator == return.denominator)
(this.numerator == 0)  ==>  (org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator)
(this.numerator == 0)  ==>  (org.apache.commons.math3.fraction.Fraction.TWO.numerator == fraction.denominator)
(this.numerator == 0)  ==>  (org.apache.commons.math3.fraction.Fraction.ZERO == return)
(this.numerator == 0)  ==>  (orig(fraction) has only one value)
(this.numerator == 0)  ==>  (orig(this) has only one value)
(this.numerator == 0)  ==>  (return has only one value)
(this.numerator == 0)  ==>  (return.denominator == 1)
(this.numerator == 0)  ==>  (this.denominator == 1)
fraction.denominator >= 1
return != null
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator >= return.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != return.numerator
this.denominator != this.numerator
this.denominator != return.numerator
fraction.numerator != return.denominator
===========================================================================
org.apache.commons.math3.fraction.Fraction.negate():::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
this.denominator >= this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.negate():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == return.denominator
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
this.denominator >= this.numerator
this.denominator > return.numerator
return.numerator % this.numerator == 0
this.numerator != return.numerator
this.numerator % return.numerator == 0
this.numerator + return.numerator == 0
===========================================================================
org.apache.commons.math3.fraction.Fraction.percentageValue():::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == this.denominator
this has only one value
===========================================================================
org.apache.commons.math3.fraction.Fraction.percentageValue():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
return == 50.0
===========================================================================
org.apache.commons.math3.fraction.Fraction.reciprocal():::ENTER
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.reciprocal():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
return != null
return.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return.denominator
return.numerator % this.denominator == 0
this.denominator % return.numerator == 0
this.denominator >= return.numerator
return.denominator % this.numerator == 0
this.numerator % return.denominator == 0
this.numerator <= return.denominator
===========================================================================
org.apache.commons.math3.fraction.Fraction.subtract(int):::ENTER
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == i
this has only one value
this.numerator == 2147483647
===========================================================================
org.apache.commons.math3.fraction.Fraction.subtract(int):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == this.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(this.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(i)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.numerator == orig(this.numerator)
this.numerator == 2147483647
return has only one value
return.numerator == 2147483646
===========================================================================
org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction):::ENTER
fraction.numerator one of { -1, 1, 2 }
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator <= fraction.numerator
this.denominator != this.numerator
this.denominator >= fraction.numerator
fraction.denominator >= fraction.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction):::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
fraction.denominator == orig(fraction.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.numerator one of { -1, 1, 2 }
return.denominator >= 1
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.denominator
org.apache.commons.math3.fraction.Fraction.serialVersionUID > return.numerator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= fraction.denominator
org.apache.commons.math3.fraction.Fraction.TWO.denominator <= return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator >= fraction.numerator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.TWO.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.math3.fraction.Fraction.ZERO.numerator < return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != fraction.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != return.denominator
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator != return.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator > fraction.numerator
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator != this.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < fraction.denominator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator <= fraction.numerator
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator < return.denominator
this.denominator != this.numerator
this.denominator >= fraction.numerator
this.denominator != return.numerator
this.numerator != return.numerator
fraction.denominator >= fraction.numerator
fraction.denominator != return.numerator
return.denominator != return.numerator
===========================================================================
org.apache.commons.math3.fraction.Fraction.toString():::ENTER
this.denominator one of { 1, 3 }
this.numerator one of { 0, 2, 3 }
===========================================================================
org.apache.commons.math3.fraction.Fraction.toString():::EXIT
org.apache.commons.math3.fraction.Fraction.TWO == orig(org.apache.commons.math3.fraction.Fraction.TWO)
org.apache.commons.math3.fraction.Fraction.ONE == orig(org.apache.commons.math3.fraction.Fraction.ONE)
org.apache.commons.math3.fraction.Fraction.ZERO == orig(org.apache.commons.math3.fraction.Fraction.ZERO)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS)
org.apache.commons.math3.fraction.Fraction.ONE_FIFTH == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH)
org.apache.commons.math3.fraction.Fraction.ONE_HALF == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF)
org.apache.commons.math3.fraction.Fraction.ONE_QUARTER == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD)
org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS)
org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS)
org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS)
org.apache.commons.math3.fraction.Fraction.TWO_THIRDS == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.denominator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_HALF.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.TWO.numerator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.numerator)
org.apache.commons.math3.fraction.Fraction.$assertionsDisabled == orig(org.apache.commons.math3.fraction.Fraction.$assertionsDisabled)
org.apache.commons.math3.fraction.Fraction.ZERO.numerator == orig(org.apache.commons.math3.fraction.Fraction.ZERO.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_FIFTH.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.ONE_QUARTER.denominator)
org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS.numerator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.math3.fraction.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.math3.fraction.Fraction.TWO_THIRDS.denominator)
org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator == orig(org.apache.commons.math3.fraction.Fraction.MINUS_ONE.numerator)
this.denominator == orig(this.denominator)
this.numerator == orig(this.numerator)
this.denominator one of { 1, 3 }
this.numerator one of { 0, 2, 3 }
return.toString one of { "0", "2 / 3", "3" }
===========================================================================
org.apache.commons.math3.fraction.FractionConversionException:::CLASS
===========================================================================
org.apache.commons.math3.fraction.FractionConversionException:::OBJECT
===========================================================================
org.apache.commons.math3.fraction.FractionConversionException.FractionConversionException(double, long, long):::ENTER
value one of { 0.7500000000145519, 1.0E10 }
p one of { 10000000000L, 12884901889L }
q one of { 1, 17179869185L }
===========================================================================
org.apache.commons.math3.fraction.FractionConversionException.FractionConversionException(double, long, long):::EXIT
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils:::CLASS
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS has only one value
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS != null
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] == [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000, 20922789888000, 355687428096000, 6402373705728000, 121645100408832000, 2432902008176640000]
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements >= 1
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] sorted by <=
size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) == 21
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(int, int):::ENTER
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(int, int):::EXIT
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS)
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
return one of { 7, 832507, 2147483647 }
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.gcd(int, int):::ENTER
q >= 1
p != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
p != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
q != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.gcd(int, int):::EXIT392
return == orig(q)
orig(p) == 0
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] one of { 1, 2, 24 }
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] == 1
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements > orig(p)
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)]
return > orig(p)
return < size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % return == 0
return <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return]
return >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)]
orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return]
orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1]
size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return]
size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1]
size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return]
size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1]
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] == 0
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1]
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)]
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)]
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.gcd(int, int):::EXIT439
orig(p) != 0
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.gcd(int, int):::EXIT
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS)
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements > orig(p))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] elements >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)] == 1)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] one of { 1, 2, 24 })
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % orig(q) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] % return == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p] == 1)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] one of { 1, 2, 24 })
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % orig(q) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] % return == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] one of { 1, 2, 24 })
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % orig(q) == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] % return == 0)
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1])
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return] >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]) == 1)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]) == 1)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) one of { 1, 2, 24 })
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % orig(q) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) % return == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) one of { 1, 2, 24 })
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % orig(q) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) % return == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]) one of { 1, 2, 24 })
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1] == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % orig(q) == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) % return == 0)
(orig(p) == 0)  ==>  (orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p])
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1])
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q])
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1])
(orig(p) == 0)  ==>  (orig(p) < org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return])
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (orig(p) < orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (orig(p) < orig(q))
(orig(p) == 0)  ==>  (orig(p) < size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1)
(orig(p) == 0)  ==>  (orig(q) < size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1)
(orig(p) == 0)  ==>  (orig(q) <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (orig(q) <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q])
(orig(p) == 0)  ==>  (orig(q) <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return])
(orig(p) == 0)  ==>  (orig(q) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (orig(q) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (orig(q) <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (orig(q) >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (orig(q) >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p])
(orig(p) == 0)  ==>  (orig(q) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (orig(q) >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (return < size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1)
(orig(p) == 0)  ==>  (return <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (return <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q])
(orig(p) == 0)  ==>  (return <= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return])
(orig(p) == 0)  ==>  (return <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (return <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (return <= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (return == orig(q))
(orig(p) == 0)  ==>  (return > orig(p))
(orig(p) == 0)  ==>  (return >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (return >= org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p])
(orig(p) == 0)  ==>  (return >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (return >= orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[]) != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)-1])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(q)])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return-1])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[return])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)-1]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(q)]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)-1]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(return)]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q-1]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 != orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[q]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 > org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[orig(p)])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 > org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p])
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 > orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[p]))
(orig(p) == 0)  ==>  (size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1 > orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[post(p)]))
return >= 1
orig(p) % return == 0
orig(q) % return == 0
return <= orig(q)
return != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
return != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
orig(p) != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
orig(p) != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
orig(q) != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int, int):::ENTER
x != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
x != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
y != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
y != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int, int):::EXIT
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS)
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
return % orig(x) == 0
return % orig(y) == 0
return != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
return != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
orig(x) != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
orig(x) != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
orig(y) != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
orig(y) != size(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])-1
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(int, int):::ENTER
===========================================================================
org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(int, int):::EXIT
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS)
org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[] == orig(org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS[])
return - orig(x) + orig(y) == 0
===========================================================================
org.apache.commons.math3.util.FastMath:::CLASS
org.apache.commons.math3.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME == org.apache.commons.math3.util.FastMath.$assertionsDisabled
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN == size(org.apache.commons.math3.util.FastMath.SINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN == size(org.apache.commons.math3.util.FastMath.SINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN == size(org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN == size(org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN == size(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN == size(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN == size(org.apache.commons.math3.util.FastMath.EIGHTHS[])
size(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[])-1 == size(org.apache.commons.math3.util.FastMath.CBRTTWO[])
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF has only one value
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF != null
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == double[][].class
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[] contains no nulls and has only one value, of length 9
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[] elements != null
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF has only one value
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF != null
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[] contains no nulls and has only one value, of length 6
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[] elements != null
org.apache.commons.math3.util.FastMath.SINE_TABLE_A has only one value
org.apache.commons.math3.util.FastMath.SINE_TABLE_A != null
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] == [0.0, 0.1246747374534607, 0.24740394949913025, 0.366272509098053, 0.4794255495071411, 0.5850973129272461, 0.6816387176513672, 0.7675435543060303, 0.8414709568023682, 0.902267575263977, 0.9489846229553223, 0.9808930158615112, 0.9974949359893799, 0.9985313415527344]
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] elements <= 0.9985313415527344
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] elements >= 0.0
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] sorted by <
org.apache.commons.math3.util.FastMath.SINE_TABLE_B has only one value
org.apache.commons.math3.util.FastMath.SINE_TABLE_B != null
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] == [0.0, -4.068233003401932E-9, 9.755392680573412E-9, 1.9987994582857286E-8, -1.0902938113007961E-8, -3.9986783938944604E-8, 4.23719669792332E-8, -5.207000323380292E-8, 2.800552834259E-8, 1.883511811213715E-8, -3.5997360512765566E-9, 4.116164446561962E-8, 5.0614674548127384E-8, -1.0129027912496858E-9]
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements <= 5.0614674548127384E-8
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements >= -5.207000323380292E-8
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A has only one value
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A != null
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] == [1.0, 0.9921976327896118, 0.9689123630523682, 0.9305076599121094, 0.8775825500488281, 0.8109631538391113, 0.7316888570785522, 0.6409968137741089, 0.5403022766113281, 0.4311765432357788, 0.3153223395347595, 0.19454771280288696, 0.07073719799518585, -0.05417713522911072]
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] elements != 0
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] elements <= 1.0
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] elements >= -0.05417713522911072
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] sorted by >
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B has only one value
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B != null
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] == [0.0, 3.4439717236742845E-8, 5.865827662008209E-8, -3.7999795083850525E-8, 1.184154459111628E-8, -3.43338934259355E-8, 1.1795268640216787E-8, 4.438921624363781E-8, 2.925681159240093E-8, -2.6437112632041807E-8, 2.2860509143963117E-8, -4.813899778443457E-9, 3.6725170580355583E-9, 2.0217439756338078E-10]
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements <= 5.865827662008209E-8
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements >= -3.7999795083850525E-8
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A has only one value
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A != null
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[] == [0.0, 0.1256551444530487, 0.25534194707870483, 0.3936265707015991, 0.5463024377822876, 0.7214844226837158, 0.9315965175628662, 1.1974215507507324, 1.5574076175689697, 2.092571258544922, 3.0095696449279785, 5.041914939880371, 14.101419448852539, -18.430862426757812]
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B has only one value
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B != null
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] == [0.0, -7.877917738262007E-9, -2.5857668567479893E-8, 5.2240336371356666E-9, 5.206150291559893E-8, 1.8307188599677033E-8, -5.7618793749770706E-8, 7.848361555046424E-8, 1.0708593250394448E-7, 1.7827257129423813E-8, 2.893485277253286E-8, 3.1660099222737955E-7, 4.983191803254889E-7, -3.356118100840571E-7]
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements <= 4.983191803254889E-7
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements >= -3.356118100840571E-7
org.apache.commons.math3.util.FastMath.RECIP_2PI has only one value
org.apache.commons.math3.util.FastMath.RECIP_2PI != null
org.apache.commons.math3.util.FastMath.RECIP_2PI[] == [2935890503282001226, 9154082963658192752, 3952090531849364496, 9193070505571053912, 7910884519577875640, 113236205062349959, 4577762542105553359, -5034868814120038111, 4208363204685324176, 5648769086999809661, 2819561105158720014, -4035746434778044925, -302932621132653753, -2644281811660520851, -3183605296591799669, 6722166367014452318, -3512299194304650054, -7278142539171889152]
org.apache.commons.math3.util.FastMath.PI_O_4_BITS has only one value
org.apache.commons.math3.util.FastMath.PI_O_4_BITS != null
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] == [-3958705157555305932, -4267615245585081135]
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements one of { -4267615245585081135L, -3958705157555305932L }
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] sorted by >
org.apache.commons.math3.util.FastMath.EIGHTHS has only one value
org.apache.commons.math3.util.FastMath.EIGHTHS != null
org.apache.commons.math3.util.FastMath.EIGHTHS[] == [0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625]
org.apache.commons.math3.util.FastMath.EIGHTHS[] elements <= 1.625
org.apache.commons.math3.util.FastMath.EIGHTHS[] elements >= 0.0
org.apache.commons.math3.util.FastMath.EIGHTHS[] sorted by <
org.apache.commons.math3.util.FastMath.CBRTTWO has only one value
org.apache.commons.math3.util.FastMath.CBRTTWO != null
org.apache.commons.math3.util.FastMath.CBRTTWO[] == [0.6299605249474366, 0.7937005259840998, 1.0, 1.2599210498948732, 1.5874010519681994]
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements <= 1.5874010519681994
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements >= 0.6299605249474366
org.apache.commons.math3.util.FastMath.CBRTTWO[] sorted by <
size(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[]) == 9
size(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[]) == 6
size(org.apache.commons.math3.util.FastMath.RECIP_2PI[]) == 18
size(org.apache.commons.math3.util.FastMath.PI_O_4_BITS[]) == 2
org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN] == -3183605296591799669L
org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN-1] == -2644281811660520851L
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] elements < org.apache.commons.math3.util.FastMath.PI
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.PI
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] elements < org.apache.commons.math3.util.FastMath.PI
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.PI
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.PI
org.apache.commons.math3.util.FastMath.EIGHTHS[] elements < org.apache.commons.math3.util.FastMath.PI
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements < org.apache.commons.math3.util.FastMath.PI
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] elements < org.apache.commons.math3.util.FastMath.E
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.E
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] elements < org.apache.commons.math3.util.FastMath.E
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.E
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.E
org.apache.commons.math3.util.FastMath.EIGHTHS[] elements < org.apache.commons.math3.util.FastMath.E
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements < org.apache.commons.math3.util.FastMath.E
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.LN_MANT_LEN
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.LN_2_A
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.LN_2_A
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.LN_2_A
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.LN_2_B
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.LN_2_B
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.LN_2_B
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF.getClass().getName()
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] >= org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] (elementwise)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] >= org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] (elementwise)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] >= org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] (elementwise)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] <= org.apache.commons.math3.util.FastMath.EIGHTHS[] (elementwise)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] <= org.apache.commons.math3.util.FastMath.EIGHTHS[] (elementwise)
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_3
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_5
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_7
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_9
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_11
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_13
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_15
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_17
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_3_4
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_15_16
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_13_14
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_11_12
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_9_10
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_7_8
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_5_6
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_2
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_4
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] <= org.apache.commons.math3.util.FastMath.EIGHTHS[] (elementwise)
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_3
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_5
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_7
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_9
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_11
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_13
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_15
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_17
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_3_4
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_15_16
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_13_14
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_11_12
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_9_10
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_7_8
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_5_6
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_2
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_4
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] <= org.apache.commons.math3.util.FastMath.EIGHTHS[] (elementwise)
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_3
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_5
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_7
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_9
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_11
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_13
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_15
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_17
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_3_4
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_15_16
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_13_14
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_11_12
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_9_10
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_7_8
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_5_6
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_2
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] elements < org.apache.commons.math3.util.FastMath.F_1_4
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.HEX_40000000
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.MASK_30BITS
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < size(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[])-1
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < size(org.apache.commons.math3.util.FastMath.SINE_TABLE_A[])-1
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < size(org.apache.commons.math3.util.FastMath.RECIP_2PI[])-1
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < size(org.apache.commons.math3.util.FastMath.PI_O_4_BITS[])-1
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < size(org.apache.commons.math3.util.FastMath.CBRTTWO[])-1
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN]
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN-1]
org.apache.commons.math3.util.FastMath.EIGHTHS[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.F_3_4 in org.apache.commons.math3.util.FastMath.EIGHTHS[]
org.apache.commons.math3.util.FastMath.F_7_8 in org.apache.commons.math3.util.FastMath.EIGHTHS[]
org.apache.commons.math3.util.FastMath.F_1_2 in org.apache.commons.math3.util.FastMath.EIGHTHS[]
org.apache.commons.math3.util.FastMath.F_1_4 in org.apache.commons.math3.util.FastMath.EIGHTHS[]
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements < org.apache.commons.math3.util.FastMath.TWO_POWER_52
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_3
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_5
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_7
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_9
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_11
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_13
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_15
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_17
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_2
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > org.apache.commons.math3.util.FastMath.F_1_4
===========================================================================
org.apache.commons.math3.util.FastMath.abs(double):::ENTER
org.apache.commons.math3.util.FastMath.PI > x
org.apache.commons.math3.util.FastMath.E > x
org.apache.commons.math3.util.FastMath.LN_2_A > x
org.apache.commons.math3.util.FastMath.LN_2_B != x
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > x
org.apache.commons.math3.util.FastMath.TWO_POWER_52 > x
org.apache.commons.math3.util.FastMath.F_1_13 != x
org.apache.commons.math3.util.FastMath.F_1_15 != x
org.apache.commons.math3.util.FastMath.F_1_17 != x
org.apache.commons.math3.util.FastMath.F_3_4 > x
org.apache.commons.math3.util.FastMath.F_15_16 > x
org.apache.commons.math3.util.FastMath.F_13_14 > x
org.apache.commons.math3.util.FastMath.F_11_12 > x
org.apache.commons.math3.util.FastMath.F_9_10 > x
org.apache.commons.math3.util.FastMath.F_7_8 > x
org.apache.commons.math3.util.FastMath.F_5_6 > x
org.apache.commons.math3.util.FastMath.F_1_2 > x
===========================================================================
org.apache.commons.math3.util.FastMath.abs(double):::EXIT
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF)
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[] == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[])
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF)
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[] == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_A == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_A)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_B == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_B)
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_A)
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_B)
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A)
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[])
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B)
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[])
org.apache.commons.math3.util.FastMath.RECIP_2PI == orig(org.apache.commons.math3.util.FastMath.RECIP_2PI)
org.apache.commons.math3.util.FastMath.RECIP_2PI[] == orig(org.apache.commons.math3.util.FastMath.RECIP_2PI[])
org.apache.commons.math3.util.FastMath.PI_O_4_BITS == orig(org.apache.commons.math3.util.FastMath.PI_O_4_BITS)
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] == orig(org.apache.commons.math3.util.FastMath.PI_O_4_BITS[])
org.apache.commons.math3.util.FastMath.EIGHTHS == orig(org.apache.commons.math3.util.FastMath.EIGHTHS)
org.apache.commons.math3.util.FastMath.EIGHTHS[] == orig(org.apache.commons.math3.util.FastMath.EIGHTHS[])
org.apache.commons.math3.util.FastMath.CBRTTWO == orig(org.apache.commons.math3.util.FastMath.CBRTTWO)
org.apache.commons.math3.util.FastMath.CBRTTWO[] == orig(org.apache.commons.math3.util.FastMath.CBRTTWO[])
size(org.apache.commons.math3.util.FastMath.CBRTTWO[]) == orig(size(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[]))-1
org.apache.commons.math3.util.FastMath.PI > return
org.apache.commons.math3.util.FastMath.E > return
org.apache.commons.math3.util.FastMath.LN_2_A != return
org.apache.commons.math3.util.FastMath.LN_2_B != return
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName())
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF.getClass().getName())
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > orig(x)
org.apache.commons.math3.util.FastMath.TWO_POWER_52 > return
org.apache.commons.math3.util.FastMath.F_1_13 != return
org.apache.commons.math3.util.FastMath.F_1_15 != return
org.apache.commons.math3.util.FastMath.F_1_17 != return
org.apache.commons.math3.util.FastMath.F_15_16 > return
org.apache.commons.math3.util.FastMath.F_13_14 > return
org.apache.commons.math3.util.FastMath.F_11_12 > return
return >= orig(x)
===========================================================================
org.apache.commons.math3.util.FastMath.abs(int):::ENTER
x >= 0
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX > x
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN > x
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.LN_MANT_LEN > x
org.apache.commons.math3.util.FastMath.LN_MANT_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN > x
org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < x
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.HEX_40000000 > x
org.apache.commons.math3.util.FastMath.HEX_40000000 < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.MASK_30BITS < x
org.apache.commons.math3.util.FastMath.MASK_30BITS < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
x < size(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[])-1
x < size(org.apache.commons.math3.util.FastMath.SINE_TABLE_A[])-1
x < size(org.apache.commons.math3.util.FastMath.RECIP_2PI[])-1
x <= size(org.apache.commons.math3.util.FastMath.CBRTTWO[])
x != size(org.apache.commons.math3.util.FastMath.CBRTTWO[])-1
x > org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN]
x > org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN-1]
x < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
size(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
size(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
size(org.apache.commons.math3.util.FastMath.RECIP_2PI[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
size(org.apache.commons.math3.util.FastMath.PI_O_4_BITS[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN] < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN-1] < org.apache.commons.math3.util.FastMath.RECIP_2PI[x]
===========================================================================
org.apache.commons.math3.util.FastMath.abs(int):::EXIT
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF)
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[] == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[])
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF)
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[] == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_A == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_A)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_B == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_B)
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_A)
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_B)
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A)
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[])
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B)
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[])
org.apache.commons.math3.util.FastMath.RECIP_2PI == orig(org.apache.commons.math3.util.FastMath.RECIP_2PI)
org.apache.commons.math3.util.FastMath.RECIP_2PI[] == orig(org.apache.commons.math3.util.FastMath.RECIP_2PI[])
org.apache.commons.math3.util.FastMath.PI_O_4_BITS == orig(org.apache.commons.math3.util.FastMath.PI_O_4_BITS)
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] == orig(org.apache.commons.math3.util.FastMath.PI_O_4_BITS[])
org.apache.commons.math3.util.FastMath.EIGHTHS == orig(org.apache.commons.math3.util.FastMath.EIGHTHS)
org.apache.commons.math3.util.FastMath.EIGHTHS[] == orig(org.apache.commons.math3.util.FastMath.EIGHTHS[])
org.apache.commons.math3.util.FastMath.CBRTTWO == orig(org.apache.commons.math3.util.FastMath.CBRTTWO)
org.apache.commons.math3.util.FastMath.CBRTTWO[] == orig(org.apache.commons.math3.util.FastMath.CBRTTWO[])
return == orig(x)
size(org.apache.commons.math3.util.FastMath.CBRTTWO[]) == orig(size(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[]))-1
return >= 0
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX > return
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN > return
org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.LN_MANT_LEN > return
org.apache.commons.math3.util.FastMath.LN_MANT_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN > return
org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName())
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF.getClass().getName())
org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < return
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] elements < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.HEX_40000000 > return
org.apache.commons.math3.util.FastMath.HEX_40000000 < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.MASK_30BITS < return
org.apache.commons.math3.util.FastMath.MASK_30BITS < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
return < size(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[])-1
return < size(org.apache.commons.math3.util.FastMath.SINE_TABLE_A[])-1
return < size(org.apache.commons.math3.util.FastMath.RECIP_2PI[])-1
return <= size(org.apache.commons.math3.util.FastMath.CBRTTWO[])
return != size(org.apache.commons.math3.util.FastMath.CBRTTWO[])-1
return > org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN]
return > org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN-1]
return < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
size(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
size(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
size(org.apache.commons.math3.util.FastMath.RECIP_2PI[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
size(org.apache.commons.math3.util.FastMath.PI_O_4_BITS[]) < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN] < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
org.apache.commons.math3.util.FastMath.RECIP_2PI[org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN-1] < org.apache.commons.math3.util.FastMath.RECIP_2PI[return]
===========================================================================
org.apache.commons.math3.util.FastMath.floor(double):::ENTER
x != 0
org.apache.commons.math3.util.FastMath.E != x
org.apache.commons.math3.util.FastMath.LN_2_A != x
org.apache.commons.math3.util.FastMath.LN_2_B != x
org.apache.commons.math3.util.FastMath.TWO_POWER_52 > x
org.apache.commons.math3.util.FastMath.F_1_13 != x
org.apache.commons.math3.util.FastMath.F_1_15 != x
org.apache.commons.math3.util.FastMath.F_1_17 != x
org.apache.commons.math3.util.FastMath.F_15_16 != x
org.apache.commons.math3.util.FastMath.F_13_14 != x
org.apache.commons.math3.util.FastMath.F_11_12 != x
===========================================================================
org.apache.commons.math3.util.FastMath.floor(double):::EXIT3348
return == 0.0
org.apache.commons.math3.util.FastMath.PI > orig(x)
org.apache.commons.math3.util.FastMath.E > orig(x)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] elements >= return
return in org.apache.commons.math3.util.FastMath.SINE_TABLE_A[]
return in org.apache.commons.math3.util.FastMath.SINE_TABLE_B[]
return in org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[]
return in org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[]
return in org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[]
org.apache.commons.math3.util.FastMath.EIGHTHS[] elements >= return
return in org.apache.commons.math3.util.FastMath.EIGHTHS[]
org.apache.commons.math3.util.FastMath.CBRTTWO[] elements > return
org.apache.commons.math3.util.FastMath.F_15_16 > orig(x)
org.apache.commons.math3.util.FastMath.F_13_14 > orig(x)
org.apache.commons.math3.util.FastMath.F_11_12 > orig(x)
===========================================================================
org.apache.commons.math3.util.FastMath.floor(double):::EXIT3351
org.apache.commons.math3.util.FastMath.F_1_3 != orig(x)
org.apache.commons.math3.util.FastMath.F_1_5 != orig(x)
org.apache.commons.math3.util.FastMath.F_1_7 != orig(x)
org.apache.commons.math3.util.FastMath.F_1_9 != orig(x)
org.apache.commons.math3.util.FastMath.F_1_11 != orig(x)
org.apache.commons.math3.util.FastMath.F_3_4 != orig(x)
org.apache.commons.math3.util.FastMath.F_9_10 != orig(x)
org.apache.commons.math3.util.FastMath.F_7_8 != orig(x)
org.apache.commons.math3.util.FastMath.F_5_6 != orig(x)
org.apache.commons.math3.util.FastMath.F_1_2 != orig(x)
org.apache.commons.math3.util.FastMath.F_1_4 != orig(x)
===========================================================================
org.apache.commons.math3.util.FastMath.floor(double):::EXIT
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF)
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[] == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[])
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF)
org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[] == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_A == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_A)
org.apache.commons.math3.util.FastMath.SINE_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.SINE_TABLE_B == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_B)
org.apache.commons.math3.util.FastMath.SINE_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.SINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_A)
org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[])
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_B)
org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[])
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A)
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[] == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[])
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B)
org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[] == orig(org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[])
org.apache.commons.math3.util.FastMath.RECIP_2PI == orig(org.apache.commons.math3.util.FastMath.RECIP_2PI)
org.apache.commons.math3.util.FastMath.RECIP_2PI[] == orig(org.apache.commons.math3.util.FastMath.RECIP_2PI[])
org.apache.commons.math3.util.FastMath.PI_O_4_BITS == orig(org.apache.commons.math3.util.FastMath.PI_O_4_BITS)
org.apache.commons.math3.util.FastMath.PI_O_4_BITS[] == orig(org.apache.commons.math3.util.FastMath.PI_O_4_BITS[])
org.apache.commons.math3.util.FastMath.EIGHTHS == orig(org.apache.commons.math3.util.FastMath.EIGHTHS)
org.apache.commons.math3.util.FastMath.EIGHTHS[] == orig(org.apache.commons.math3.util.FastMath.EIGHTHS[])
org.apache.commons.math3.util.FastMath.CBRTTWO == orig(org.apache.commons.math3.util.FastMath.CBRTTWO)
org.apache.commons.math3.util.FastMath.CBRTTWO[] == orig(org.apache.commons.math3.util.FastMath.CBRTTWO[])
size(org.apache.commons.math3.util.FastMath.CBRTTWO[]) == orig(size(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[]))-1
org.apache.commons.math3.util.FastMath.PI != return
org.apache.commons.math3.util.FastMath.E != return
org.apache.commons.math3.util.FastMath.LN_2_A != return
org.apache.commons.math3.util.FastMath.LN_2_B != return
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == orig(org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName())
org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.getClass().getName() == orig(org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF.getClass().getName())
org.apache.commons.math3.util.FastMath.TWO_POWER_52 > return
org.apache.commons.math3.util.FastMath.F_1_3 != return
org.apache.commons.math3.util.FastMath.F_1_5 != return
org.apache.commons.math3.util.FastMath.F_1_7 != return
org.apache.commons.math3.util.FastMath.F_1_9 != return
org.apache.commons.math3.util.FastMath.F_1_11 != return
org.apache.commons.math3.util.FastMath.F_1_13 != return
org.apache.commons.math3.util.FastMath.F_1_15 != return
org.apache.commons.math3.util.FastMath.F_1_17 != return
org.apache.commons.math3.util.FastMath.F_3_4 != return
org.apache.commons.math3.util.FastMath.F_15_16 != return
org.apache.commons.math3.util.FastMath.F_13_14 != return
org.apache.commons.math3.util.FastMath.F_11_12 != return
org.apache.commons.math3.util.FastMath.F_9_10 != return
org.apache.commons.math3.util.FastMath.F_7_8 != return
org.apache.commons.math3.util.FastMath.F_5_6 != return
org.apache.commons.math3.util.FastMath.F_1_2 != return
return % org.apache.commons.math3.util.FastMath.F_1_2 == 0
org.apache.commons.math3.util.FastMath.F_1_4 != return
return % org.apache.commons.math3.util.FastMath.F_1_4 == 0
return <= orig(x)
===========================================================================
org.junit.Assert.assertEquals(double, double, double):::ENTER
expected == actual
delta one of { 1.0E-20, 1.0E-15 }
delta % expected == 0
===========================================================================
org.junit.Assert.assertEquals(double, double, double):::EXIT
===========================================================================
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object):::ENTER
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object):::EXIT
===========================================================================
org.junit.Assert.assertEquals(java.lang.String, double, double, double):::ENTER
expected == actual
message == null
delta one of { 1.0E-20, 1.0E-15 }
delta % expected == 0
===========================================================================
org.junit.Assert.assertEquals(java.lang.String, double, double, double):::EXIT
===========================================================================
org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
message == null
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT112
===========================================================================
org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
===========================================================================
org.junit.Assert.assertEquals(java.lang.String, long, long):::ENTER
expected == actual
message == null
===========================================================================
org.junit.Assert.assertEquals(java.lang.String, long, long):::EXIT
===========================================================================
org.junit.Assert.assertEquals(long, long):::ENTER
expected == actual
===========================================================================
org.junit.Assert.assertEquals(long, long):::EXIT
===========================================================================
org.junit.Assert.assertFalse(boolean):::ENTER
condition == false
===========================================================================
org.junit.Assert.assertFalse(boolean):::EXIT
===========================================================================
org.junit.Assert.assertFalse(java.lang.String, boolean):::ENTER
message == null
condition == false
===========================================================================
org.junit.Assert.assertFalse(java.lang.String, boolean):::EXIT
===========================================================================
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object):::ENTER
expected == actual
expected has only one value
expected.getClass().getName() == org.apache.commons.math3.fraction.Fraction.class
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object):::EXIT
===========================================================================
org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
expected == actual
message == null
expected has only one value
expected.getClass().getName() == org.apache.commons.math3.fraction.Fraction.class
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT769
===========================================================================
org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
===========================================================================
org.junit.Assert.assertTrue(boolean):::ENTER
condition == true
===========================================================================
org.junit.Assert.assertTrue(boolean):::EXIT
===========================================================================
org.junit.Assert.assertTrue(java.lang.String, boolean):::ENTER
message == null
condition == true
===========================================================================
org.junit.Assert.assertTrue(java.lang.String, boolean):::EXIT
===========================================================================
org.junit.Assert.doubleIsDifferent(double, double, double):::ENTER
d1 == d2
delta one of { 1.0E-20, 1.0E-15 }
delta % d1 == 0
===========================================================================
org.junit.Assert.doubleIsDifferent(double, double, double):::EXIT603
===========================================================================
org.junit.Assert.doubleIsDifferent(double, double, double):::EXIT603;condition="not(return == true)"
===========================================================================
org.junit.Assert.doubleIsDifferent(double, double, double):::EXIT
return == false
===========================================================================
org.junit.Assert.doubleIsDifferent(double, double, double):::EXIT;condition="not(return == true)"
===========================================================================
org.junit.Assert.equalsRegardingNull(java.lang.Object, java.lang.Object):::ENTER
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
org.junit.Assert.equalsRegardingNull(java.lang.Object, java.lang.Object):::EXIT127
===========================================================================
org.junit.Assert.equalsRegardingNull(java.lang.Object, java.lang.Object):::EXIT127;condition="return == true"
===========================================================================
org.junit.Assert.equalsRegardingNull(java.lang.Object, java.lang.Object):::EXIT
return == true
===========================================================================
org.junit.Assert.equalsRegardingNull(java.lang.Object, java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.junit.Assert.isEquals(java.lang.Object, java.lang.Object):::ENTER
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
org.junit.Assert.isEquals(java.lang.Object, java.lang.Object):::EXIT
return == true
===========================================================================
org.junit.Assert.isEquals(java.lang.Object, java.lang.Object):::EXIT;condition="return == true"
Exiting Daikon.
